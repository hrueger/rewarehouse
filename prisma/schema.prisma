// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  manufacturer String
  name         String
  price        Float
  items        Item[]
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   String
  length       Float?
}

model Item {
  id                String   @id @default(uuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  purchaseDate      DateTime
  product           Product  @relation(fields: [productId], references: [id])
  productId         String
  bundle            Bundle?  @relation(fields: [bundleId], references: [id])
  bundleId          String?
  currentLocation   Location @relation(fields: [currentLocationId], references: [id])
  currentLocationId String
  status            Status   @default(AVAILABLE)
  label             Label?
}

model Label {
  code      Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  item      Item?    @relation(fields: [itemId], references: [id])
  bundle    Bundle?  @relation(fields: [bundleId], references: [id])
  itemId    String?  @unique
  bundleId  String?  @unique
}

model Bundle {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  items      Item[]
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  label      Label?
}

model Location {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  color     String
  items     Item[]
  default   Boolean  @default(false)
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
  bundles  Bundle[]
}

enum Status {
  AVAILABLE
  LENT
  USED
}
